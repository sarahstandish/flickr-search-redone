{"version":3,"sources":["components/FormComponents.js","components/keys.js","components/flickrSearchHelperFunctions.js","components/Photo.js","components/ApiCallTracker.js","server/api/index.js","components/FormContainer.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponents","props","dpiVisibility","callsThisHour","type","name","placeholder","value","search_term","onChange","handleChange","required","location","className","checked","licenses","href","target","rel","dpi","flickrApiKey","googleApiKey","createUrl","latitude","longitude","a","licensesToString","licenseObject","Object","keys","filter","license","join","getLatAndLang","url","fetch","then","response","json","data","results","geometry","bounds","northeast","lat","lng","catch","hasMinDPI","photo","id","secret","includes","exif","some","element","values","parseInt","raw","_content","Photo","flickr_url","owner","photo_url","server","src","alt","title","ApiCallTracker","warning","percentage","thisHour","toFixed","api","axios","create","baseURL","apis","newCall","info","post","getCalls","get","FormContainer","useState","0","1","2","3","4","5","6","7","8","9","10","input","setInput","photosArray","setPhotosArray","searchError","locationError","errorMessages","setErrorMessages","thisSession","apiCalls","setApiCalls","useEffect","millisecondsLastHour","Date","now","object","lastHundred","slice","reverse","dateTime","calls","prevState","err","console","log","fetchPhotos","prevMessages","ok","photos","length","Promise","all","map","result","error","onSubmit","event","preventDefault","App","process","PORT","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAyKeA,MAvKf,SAAyBC,GAGrB,IAAIC,EAAgBD,EAAME,cAAgB,KAAO,qBAAuB,mBAExE,OAEI,iCACI,+CACA,gDACI,uBACIC,KAAK,OACLC,KAAK,cACLC,YAAY,2BACZC,MAAON,EAAMO,YACbC,SAAUR,EAAMS,aAChBC,UAAQ,IAGhB,yCACI,uBACIP,KAAK,OACLC,KAAK,WACLC,YAAY,+BACZC,MAAON,EAAMW,SACbH,SAAUR,EAAMS,eAGxB,6CACI,mBAAGG,UAAU,cAAb,qFACA,sBAAKA,UAAU,WAAf,UAEA,wBAAOA,UAAU,YAAjB,gCACI,uBACIT,KAAK,WACLC,KAAK,IACLE,MAAM,IACNO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBACIA,UAAU,YADd,yDAEI,mBAAGG,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAjF,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,8CACI,mBAAGG,KAAK,kDAAkDC,OAAO,SAASC,IAAI,aAA9E,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,uDACI,mBAAGG,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAjF,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,gCACI,mBAAGG,KAAK,+CAA+CC,OAAO,SAASC,IAAI,aAA3E,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,2CACI,mBAAGG,KAAK,kDAAkDC,OAAO,SAASC,IAAI,aAA9E,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,2CAA2D,mBAAGG,KAAK,kDAAkDC,OAAO,SAASC,IAAI,aAA9E,6BACvD,uBACAd,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEhB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,8CAA8D,mBAAGG,KAAK,wCAAwCC,OAAO,SAASC,IAAI,aAApE,6BAC1D,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,0CACI,mBAAGG,KAAK,qCAAqCC,OAAO,SAASC,IAAI,aAAjE,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGpB,wBAAOA,UAAU,YAAjB,2CACI,mBAAGG,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAjF,6BACA,uBACId,KAAK,WACLC,KAAK,IAAIE,MAAM,IACfO,QAASb,EAAMA,MAAMc,SAAS,GAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,iBAGxB,wBAAOA,UAAU,YAAjB,+BACI,mBAAGG,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAjF,6BACA,uBACId,KAAK,WACLC,KAAK,KAAKE,MAAM,KAChBO,QAASb,EAAMA,MAAMc,SAAS,IAC9BN,SAAUR,EAAMS,eAEpB,sBAAMG,UAAU,oBAIpB,sBAAKA,UAAaX,EAAlB,UACI,gDACI,uBACIE,KAAK,SACLC,KAAK,MACLE,MAAON,EAAMkB,IACbV,SAAUR,EAAMS,kBAG5B,gDCpKNU,EAAe,mCACfC,EAAe,0C,SCCNC,E,kFAAf,WAAyBrB,EAAOsB,EAAUC,GAA1C,eAAAC,EAAA,6DAEQV,EAAWW,EAAiBzB,EAAMc,UAF1C,sGAIwFK,EAJxF,iBAI6GnB,EAAMO,YAJnH,kGAIwNe,EAJxN,gBAIwOC,EAJxO,oBAI6PT,IAJ7P,4C,sBAOA,SAASW,EAAiBC,GAKtB,OAHuBC,OAAOC,KAAKF,GAAeG,QAAO,SAAAC,GAAO,OAAIJ,EAAcI,MAG1DC,KAAK,K,SAGlBC,E,8EAAf,WAA6BrB,GAA7B,eAAAa,EAAA,yDAESb,EAFT,yCAGe,CAAC,MAAO,QAHvB,cAKYsB,EALZ,oEAK+EtB,EAL/E,gBAK+FS,GAL/F,kBAOec,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,MAAO,CAACA,EAAKC,QAAQ,GAAGC,SAASC,OAAOC,UAAUC,IAAKL,EAAKC,QAAQ,GAAGC,SAASC,OAAOC,UAAUE,QAEpGC,OAAM,iBAAM,CAAC,MAAO,WAZjC,4C,+BAgBeC,E,gFAAf,WAAyBC,EAAO7B,GAAhC,eAAAM,EAAA,6DAEQS,EAFR,qFAE4Fd,EAF5F,qBAEqH4B,EAAMC,GAF3H,mBAEwID,EAAME,OAF9I,mDAIWf,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACF,GAAKT,OAAOC,KAAKQ,EAASW,OAAOG,SAAS,SAAcd,EAASW,MAAMI,KAAKC,MAAK,SAAAC,GAAO,OAAK1B,OAAO2B,OAAOD,GAASH,SAAS,iBAAmBK,SAASF,EAAQG,IAAIC,WAAavC,KAC1K,OAAO6B,KAGlBF,OAAM,kBAAM,SAXrB,4C,sBCnBea,MAZf,YAA2B,IAAV1D,EAAS,EAATA,MAET2D,EAAU,wCAAoC3D,EAAM4D,MAA1C,YAAmD5D,EAAMgD,IACnEa,EAAS,wCAAoC7D,EAAM8D,OAA1C,YAAoD9D,EAAMgD,GAA1D,YAAgEhD,EAAMiD,OAAtE,UAEb,OACI,mBAAGlC,KAAM4C,EAAY3C,OAAO,SAASC,IAAI,aAAzC,SACI,qBAAK8C,IAAKF,EAAWG,IAAKhE,EAAMiE,WCkB7BC,ICzBXjC,EDyBWiC,EAxBf,SAAyBlE,GAErB,IAEImE,EAFAC,GAAcpE,EAAMA,MAAMqE,SAAW,KAAO,KAAKC,QAAQ,GAc7D,OATIH,EADAC,EAAa,GACN,qCAAiCA,EAAjC,0BACAA,EAAa,GACb,qCAAiCA,EAAjC,qHACAA,EAAa,IACb,qCAAiCA,EAAjC,iGAEA,8HAIH,qBAAKxD,UAAU,QAAf,SACI,4BAAIuD,O,QChBhBlC,EAAM,aAKV,IAAMsC,E,OAAMC,EAAMC,OAAO,CACrBC,QAASzC,IAWE0C,EALF,CACTC,QAJmB,SAAAC,GAAI,OAAIN,EAAIO,KAAK,eAAgBD,IAKpDE,SAJoB,kBAAMR,EAAIS,IAAI,kBC2MvBC,MAlNf,WAGI,MAA4BC,mBAAS,CACjC3E,YAAa,GACbO,SAAU,CACNqE,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,IAAI,GAER3E,IAAK,GACLP,SAAU,KAhBd,mBAAQmF,EAAR,KAAeC,EAAf,KAoBA,EAAwCb,mBAAS,IAAjD,mBAAQc,EAAR,KAAqBC,EAArB,KAGA,EAA4Cf,mBAAS,CACjDgB,YAAa,GACbC,cAAe,KAFnB,mBAAQC,EAAR,KAAuBC,EAAvB,KAMA,EAAkCnB,mBAAS,CACvCoB,YAAa,EACbjC,SAAU,IAFd,mBAAQkC,EAAR,KAAkBC,EAAlB,KAOAC,qBAAU,WAEN,IAAIvG,EAAgB,EAChBwG,EAAuBC,KAAKC,MAAQ,KAExCrC,EAAIQ,WACC5C,MAAK,SAAA0E,GAGF,IAHY,EAGRC,EAAcD,EAAOvE,KAAKA,KAAKyE,OAAO,KAAKC,UAHnC,cAKUF,GALV,IAKZ,2BAAmC,CAAC,IAAzBzD,EAAwB,QAC/B,KAAIA,EAAQ4D,UAAYP,GAGpB,MAFAxG,GAAiBmD,EAAQ6D,OAPrB,8BAYZV,GAAY,SAAAW,GACR,OAAO,2BACAA,GADP,IAEI9C,SAAUnE,UAIrB2C,OAAM,SAAAuE,GAAG,OAAIC,QAAQC,IAAI,UAAWF,QAE1C,IAGHX,qBAAU,WAGFF,EAASD,YAAc,IACvB/B,EAAIK,QAAQ,CAAE,MAAU2B,EAASD,cAChCnE,KAAKqE,GAAY,SAAAW,GACd,OAAO,2BACAA,GADP,IAEIb,YAAa,QAIpBzD,OAAM,SAAAuE,GACHC,QAAQC,IAAIF,QAIrB,CAACb,EAASD,cAwBb,IAAMiB,EAAW,uCAAG,sCAAA/F,EAAA,sEAEqBQ,EAAc8D,EAAMnF,UAFzC,0CAEVW,EAFU,KAECC,EAFD,KAIZuE,EAAMnF,UAAyB,QAAbW,EAClB+E,GAAiB,SAAAmB,GACb,OAAO,2BACAA,GADP,IAEIrB,cAAe,6EAIvBE,GAAiB,SAAAmB,GACb,OAAO,2BACAA,GADP,IAEIrB,cAAe,QAfX,SAoBO9E,EAAUyE,EAAOxE,EAAUC,GApBlC,cAoBZoC,EApBY,iBAsBQzB,MAAMyB,GAC7BxB,MAAK,SAAAC,GACF,GAAIA,EAASqF,GAOT,OANAjB,GAAY,SAAAW,GACR,MAAO,CACH9C,SAAU8C,EAAU9C,SAAW,EAC/BiC,YAAaa,EAAUb,YAAc,MAGtClE,EAASC,UAIvBF,MAAK,SAAAG,GACF,OAAIwD,EAAM5E,KAENsF,GAAY,SAAAW,GACR,MAAO,CACH9C,SAAU8C,EAAU9C,SAAW/B,EAAKoF,OAAO3E,MAAM4E,OACjDrB,YAAaa,EAAUb,YAAchE,EAAKoF,OAAO3E,MAAM4E,WAIxDC,QAAQC,IAAIvF,EAAKoF,OAAO3E,MAAM+E,KAAI,SAAA/E,GAAK,OAAID,EAAUC,EAAO+C,EAAM5E,SACpEiB,MAAK,SAAA4F,GAAM,OAAIA,EAAOlG,QAAO,SAAAwB,GAAO,OAAIA,QACxCR,OAAM,SAAAmF,GAAK,OAAIX,QAAQC,IAAIU,OAGrB1F,EAAKoF,OAAO3E,SAlDf,QAsDW,KAhCvBiD,EAtBY,QAsDA2B,OACZtB,GAAiB,SAAAmB,GACb,OAAO,2BACAA,GADP,IAEItB,YAAa,uCAIrBG,GAAiB,SAAAmB,GACb,OAAO,2BACAA,GADP,IAEItB,YAAa,QAKzBD,EAAeD,EAAY8B,KAAI,SAAA/E,GAAK,OAAI,cAAC,EAAD,CAAsB/C,MAAO+C,GAAjBA,EAAMC,QAtE1C,4CAAH,qDA+EjB,OACI,sBAAKpC,UAAU,OAAOqH,SAP1B,SAAsBC,GAClBA,EAAMC,iBAENZ,KAIA,UACI,cAAE,EAAF,CACI9G,aAvGZ,SAAsByH,GAClB,MAAuCA,EAAMlH,OAArCZ,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOH,EAArB,EAAqBA,KAAMU,EAA3B,EAA2BA,QAIvBkF,EADS,aAAT5F,EACS,2BACF2F,GADC,IAEJhF,SAAS,2BACFgF,EAAMhF,UADL,kBAEHV,EAAOS,MAIP,2BACFiF,GADC,kBAEH1F,EAAOE,MAyFRN,MAAS8F,EACT5F,cAAiBqG,EAASlC,WAE5BkC,EAASlC,SAAW,EAClB,cAAE,EAAF,CAAiBrE,MAASuG,IACxB,KAGN,mBAAG3F,UAAY,QAAf,SAAwBwF,EAAcD,gBACtC,mBAAGvF,UAAY,QAAf,SAAwBwF,EAAcF,cACtC,qBAAKtF,UAAU,SAAf,SACKoF,Q,QCpMFoC,MAZf,WAGE,OAFAf,QAAQC,IAAIe,cACZhB,QAAQC,IAAIe,mIAAYC,MAEtB,cAAC,IAAD,UACE,qBAAK1H,UAAU,MAAf,SACE,cAAE,EAAF,SCEO2H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtG,MAAK,YAAkD,IAA/CuG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac0d56d0.chunk.js","sourcesContent":["import React from 'react'\n\nfunction FormComponents( props ) {\n\n    // hide dpi search component if calls per hour have exceeded 3600 (maximum set by Flickr)\n    let dpiVisibility = props.callsThisHour > 3600 ? \"dpiSearchInvisible\" : \"dpiSearchVisible\"\n    \n    return(\n        \n        <form>\n            <h2>Flickr Search</h2>\n            <label>Search term</label>\n                <input \n                    type=\"text\" \n                    name=\"search_term\" \n                    placeholder=\"Looking for photos of...\" \n                    value={props.search_term} \n                    onChange={props.handleChange}\n                    required\n                />\n\n            <label>City</label>\n                <input \n                    type=\"text\" \n                    name=\"location\" \n                    placeholder=\"Photos taken in or around...\" \n                    value={props.location} \n                    onChange={props.handleChange} \n                />\n                \n            <label>Licenses</label>\n                <p className=\"explanation\">Default selection: images licensed for commercial use and modifications</p>\n                <div className='licenses'>\n\n                <label className=\"container\">All Rights Reserved\n                    <input \n                        type='checkbox' \n                        name=\"0\" \n                        value=\"0\" \n                        checked={props.props.licenses[0]} \n                        onChange={props.handleChange} \n                    />\n                    <span className=\"checkmark\"></span>\n                </label>\n                \n                <label \n                    className=\"container\">Attribution-NonCommercial-ShareAlike License  \n                    <a href=\"https://creativecommons.org/licenses/by-nc-sa/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox'  \n                        name=\"1\" value=\"1\" \n                        checked={props.props.licenses[1]}\n                        onChange={props.handleChange}\n                    />\n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Attribution-NonCommercial License  \n                    <a href=\"https://creativecommons.org/licenses/by-nc/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"2\" value=\"2\" \n                        checked={props.props.licenses[2]}\n                        onChange={props.handleChange}\n                    />\n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Attribution-NonCommercial-NoDerivs License  \n                    <a href=\"https://creativecommons.org/licenses/by-nc-nd/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"3\" value=\"3\" \n                        checked={props.props.licenses[3]}\n                        onChange={props.handleChange}\n                        />\n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Attribution License  \n                    <a href=\"https://creativecommons.org/licenses/by/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"4\" value=\"4\"\n                        checked={props.props.licenses[4]} \n                        onChange={props.handleChange}\n                    />  \n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Attribution-ShareAlike License  \n                    <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"5\" value=\"5\" \n                        checked={props.props.licenses[5]}\n                        onChange={props.handleChange}\n                    />\n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Attribution-NoDerivs License  <a href=\"https://creativecommons.org/licenses/by-nd/2.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                    type='checkbox' \n                    name=\"6\" value=\"6\" \n                    checked={props.props.licenses[6]}\n                    onChange={props.handleChange}\n                    />  \n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">No known copyright restrictions  <a href=\"https://www.flickr.com/commons/usage/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"7\" value=\"7\" \n                        checked={props.props.licenses[7]}\n                        onChange={props.handleChange}\n                    />  \n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">United States Government Work  \n                    <a href=\"http://www.usa.gov/copyright.shtml\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"8\" value=\"8\" \n                        checked={props.props.licenses[8]}\n                        onChange={props.handleChange}\n                    />  \n                    <span className=\"checkmark\"></span>\n                </label>\n\n                <label className=\"container\">Public Domain Dedication (CC0)  \n                    <a href=\"https://creativecommons.org/publicdomain/zero/1.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                    <input \n                        type='checkbox' \n                        name=\"9\" value=\"9\" \n                        checked={props.props.licenses[9]}\n                        onChange={props.handleChange}\n                        />  \n                    <span className=\"checkmark\"></span>\n                </label>\n\n            <label className=\"container\">Public Domain Mark  \n                <a href=\"https://creativecommons.org/publicdomain/mark/1.0/\" target=\"_blank\" rel=\"noreferrer\">     Learn more</a>\n                <input \n                    type='checkbox' \n                    name=\"10\" value=\"10\" \n                    checked={props.props.licenses[10]}\n                    onChange={props.handleChange}\n                />  \n                <span className=\"checkmark\"></span>\n            </label>\n\n            </div>\n            <div className = {dpiVisibility}>\n                <label>Minimum DPI</label>\n                    <input \n                        type=\"number\" \n                        name=\"dpi\" \n                        value={props.dpi} \n                        onChange={props.handleChange}\n                    />\n            </div>\n            <button>Submit</button>\n        </form>\n    )\n}\n\nexport default FormComponents;\n\n","const flickrApiKey = '7441a4ff83fda0c1e35cbd7c4016210f';\r\nconst googleApiKey = 'AIzaSyBAFrEcXX5Gv_IRzXexjpfJ-S5Usii85D8';\r\n\r\nexport { flickrApiKey, googleApiKey }","import {googleApiKey, flickrApiKey} from './keys'\n\nasync function createUrl(props, latitude, longitude) {\n\n    let licenses = licensesToString(props.licenses);\n\n    return `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${flickrApiKey}&text=${props.search_term}&content_type=1&per_page=250&format=json&nojsoncallback=1&sort=relevance&radius=32&lat=${latitude}&lon=${longitude}&license=${licenses}`\n}\n\nfunction licensesToString(licenseObject) {\n    //filter so only selected (true) license numbers are included\n    let selectedLicenses = Object.keys(licenseObject).filter(license => licenseObject[license])\n\n    //return selected licenses as a string joined by commas\n    return selectedLicenses.join(\",\")\n}\n\nasync function getLatAndLang(location) {\n\n    if (!location) {\n        return ['%00', '%00']\n    } else {\n        let url = `https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${googleApiKey}`\n        \n        return fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                return [data.results[0].geometry.bounds.northeast.lat, data.results[0].geometry.bounds.northeast.lng]\n            })\n            .catch(() => ['%00', '%00']) // return empty location coordinates if error\n    }\n}\n\nasync function hasMinDPI(photo, dpi) {\n\n    let url = `https://www.flickr.com/services/rest/?method=flickr.photos.getExif&api_key=${flickrApiKey}&photo_id=${photo.id}&secret=${photo.secret}&format=json&nojsoncallback=1`;\n    \n    return fetch(url)\n        .then(response => response.json())\n        .then(response => { // if has exif data, has x-resolution, and x-resolution is greater than or equal to min dpi\n            if ((Object.keys(response.photo).includes('exif')) && ((response.photo.exif.some(element => (Object.values(element).includes('X-Resolution') && parseInt(element.raw._content) >= dpi))))) {\n                    return photo;\n                }\n        })\n        .catch(() => null) // return null if error\n}\n\nexport { hasMinDPI, getLatAndLang, createUrl}","import React from 'react';\r\n\r\nfunction Photo({ props }) {\r\n\r\n    let flickr_url = `https://www.flickr.com/photos/${props.owner}/${props.id}`\r\n    let photo_url = `https://live.staticflickr.com/${props.server}/${props.id}_${props.secret}_n.jpg`\r\n\r\n    return(\r\n        <a href={flickr_url} target='_blank' rel=\"noreferrer\">\r\n            <img src={photo_url} alt={props.title}/>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Photo;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\n\nfunction ApiCallTracker( props ) {\n\n    let percentage = (props.props.thisHour / 3600 * 100).toFixed(0)\n\n    let warning;\n\n    if (percentage < 50) {\n        warning = `API calls this hour are at ${percentage}% of the hourly limit.`\n    } else if (percentage < 80) {\n        warning = `API calls this hour are at ${percentage}% of the hourly limit.\\nTip: searching with DPI performs many more API calls, so search without it unless needed.`\n    } else if (percentage < 100) {\n        warning = `API calls this hour are at ${percentage}% of the hourly limit.\\nAfter the limit is exceeded, DPI search will be temporarily disabled.`\n    } else {\n        warning = `API calls this hour are over the hourly limit and DPI search has been disabled.\\nCheck back later to search with DPI again.`\n    }\n\n    return(\n            <div className=\"error\">\n                <p>{warning}</p>\n            </div>\n\n    )\n}\n\nexport default ApiCallTracker;","import axios from 'axios'\n\nlet url;\n\nif (process.env.NODE_ENV === 'production') {\n    url = 'index.html'\n} else {\n    url = 'http://localhost:8000/api'\n}\n\nconst api = axios.create({\n    baseURL: url\n})\n\nexport const newCall = info => api.post('/searchCalls', info)\nexport const getCalls = () => api.get('/searchCalls')\n\nconst apis = {\n    newCall,\n    getCalls\n}\n\nexport default apis","import React, { useState, useEffect } from 'react';\r\nimport FormComponents from './FormComponents';\r\nimport { hasMinDPI, getLatAndLang, createUrl} from './flickrSearchHelperFunctions'\r\nimport Photo from './Photo'\r\nimport ApiCallTracker from './ApiCallTracker';\r\nimport api from '../server/api'\r\n\r\n\r\nfunction FormContainer() {\r\n\r\n    // state containing form input\r\n    const [ input, setInput ] = useState({\r\n        search_term: \"\",\r\n        licenses: {\r\n            0: false,\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: true,\r\n            5: true,\r\n            6: false,\r\n            7: true,\r\n            8: true,\r\n            9: true,\r\n            10: true\r\n        },\r\n        dpi: \"\",\r\n        location: \"\"\r\n    })\r\n\r\n    // photos returned by search\r\n    const [ photosArray, setPhotosArray ] = useState([]);\r\n\r\n    // error messages\r\n    const [ errorMessages, setErrorMessages ] = useState({\r\n        searchError: \"\",\r\n        locationError: \"\",\r\n    })\r\n\r\n    // api calls\r\n    const [ apiCalls, setApiCalls ] = useState({\r\n        thisSession: 0,\r\n        thisHour: 0\r\n    })\r\n\r\n    // get api calls this hour from database on initial render, use it to set total api calls in state\r\n\r\n    useEffect(() => {\r\n\r\n        let callsThisHour = 0\r\n        let millisecondsLastHour = Date.now() - 3600000 // milliseconds that occurred in the last hour\r\n\r\n        api.getCalls()\r\n            .then(object => {\r\n\r\n                // take only the last 100 calls since each entry must be at least 1% of the total capacity\r\n                let lastHundred = object.data.data.slice(-100).reverse()\r\n                \r\n                for (const element of lastHundred) {\r\n                    if (element.dateTime >= millisecondsLastHour) {\r\n                        callsThisHour += element.calls\r\n                    } else {\r\n                        break\r\n                    }\r\n                }\r\n                setApiCalls(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        thisHour: callsThisHour\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => console.log(\"Error: \", err))\r\n\r\n    }, [])\r\n\r\n        // write the apiCalls to the database\r\n    useEffect(() => { \r\n\r\n        // only run if calls are greater than or 1% of limit\r\n        if (apiCalls.thisSession > 36) {\r\n            api.newCall({ \"calls\" : apiCalls.thisSession })\r\n            .then(setApiCalls(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    thisSession: 0\r\n                }\r\n\r\n            })) // reset apiCalls to zero\r\n            .catch(err => {\r\n                console.log(err)            \r\n                })\r\n        } \r\n\r\n    }, [apiCalls.thisSession])\r\n\r\n    // handle form changes\r\n    function handleChange(event) {\r\n        const { name, value, type, checked } = event.target\r\n\r\n        //handle checkbox change\r\n        if (type === \"checkbox\") {\r\n            setInput({\r\n                ...input,\r\n                licenses: {\r\n                    ...input.licenses,\r\n                    [name]: checked\r\n                }\r\n            })\r\n        } else { // handle all other changes\r\n            setInput({\r\n                ...input,\r\n                [name]: value\r\n            })\r\n        }        \r\n    }\r\n\r\n    // fetch photos from flickr; function to run in onSubmit\r\n    const fetchPhotos = async () => {\r\n\r\n        let [ latitude , longitude ] = await getLatAndLang(input.location); // get latitude and longitude, returned as array \r\n\r\n        if (input.location && latitude === '%00') {\r\n            setErrorMessages(prevMessages => {\r\n                return {\r\n                    ...prevMessages,\r\n                    locationError: \"Your location could not be found; search completed for all locations.\"\r\n                }\r\n            })\r\n        } else {\r\n            setErrorMessages(prevMessages => {\r\n                return {\r\n                    ...prevMessages,\r\n                    locationError: \"\"\r\n                }\r\n            })\r\n        }\r\n        \r\n        let flickr_url = await createUrl(input, latitude, longitude) // create the url for the get request\r\n\r\n        let photosArray = await fetch(flickr_url) // make call to flickr\r\n        .then(response => {\r\n            if (response.ok) {\r\n                setApiCalls(prevState => {\r\n                    return {\r\n                        thisHour: prevState.thisHour + 1,\r\n                        thisSession: prevState.thisSession + 1\r\n                    }\r\n                })\r\n                return response.json();\r\n            }\r\n            // handle bad request\r\n        })\r\n        .then(data => {\r\n            if (input.dpi) {\r\n\r\n                setApiCalls(prevState => {\r\n                    return {\r\n                        thisHour: prevState.thisHour + data.photos.photo.length,\r\n                        thisSession: prevState.thisSession + data.photos.photo.length\r\n                    }\r\n                })\r\n\r\n                return Promise.all(data.photos.photo.map(photo => hasMinDPI(photo, input.dpi)))\r\n                    .then(result => result.filter(element => element)) // filter out undefined elements in return array\r\n                    .catch(error => console.log(error))\r\n\r\n                } else {\r\n                    return data.photos.photo\r\n                }\r\n        })\r\n\r\n        if (photosArray.length === 0) {\r\n            setErrorMessages(prevMessages => {\r\n                return {\r\n                    ...prevMessages,\r\n                    searchError: \"No results matched your search.\"\r\n                }\r\n            })\r\n        } else {\r\n            setErrorMessages(prevMessages => {\r\n                return {\r\n                    ...prevMessages,\r\n                    searchError: \"\"\r\n                }\r\n            })\r\n        }\r\n\r\n        setPhotosArray(photosArray.map(photo => <Photo key={photo.id} props={photo} /> ))\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        fetchPhotos()\r\n    }\r\n\r\n    return(\r\n        <div className=\"form\" onSubmit={handleSubmit}>\r\n            < FormComponents\r\n                handleChange = {handleChange}\r\n                props = {input}\r\n                callsThisHour = {apiCalls.thisHour}\r\n            />\r\n            { apiCalls.thisHour > 0 ? \r\n                < ApiCallTracker props = {apiCalls} />\r\n                : null\r\n            }\r\n            \r\n            <p className = \"error\">{errorMessages.locationError}</p>\r\n            <p className = \"error\">{errorMessages.searchError}</p>\r\n            <div className=\"photos\">\r\n                {photosArray}\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default FormContainer;","import './style/App.css';\nimport FormContainer from './components/FormContainer'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nfunction App() {\n  console.log(process.env.NODE_ENV);\n  console.log(process.env.PORT)\n  return (\n    <Router>\n      <div className=\"App\">\n        < FormContainer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}